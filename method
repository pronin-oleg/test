class MyClass1
  $n = "переменная из MyClass1"
# Закрытый метод
  def method_l
      # ...
      puts "Метод 1"
  end

# Открытый метод
  def method_2(a)
      # ...
      puts "Метод из класса 1. А: #{a}"
  end

# Закрытый метод
  def method_З
      # ...
      puts "Метод 3"

  end

  private :method_l
      #Уровень private означает,
      #что метод доступен только внутри класса или его подклассов и может вызываться
      #только в "функциональной форме" от имени self, причем вызывающий объект
      #может указываться явно или подразумеваться неявно

  public :method_2
      # Открытый метод

  protected :method_З
      #Уровень protected означает,
      #что метод может вызываться только внутри класса, но в отличие от закрытого метода,
      #не обязательно от имени self.

      #Поскольку далее вызывается метод private без параметров, то методы my_method
      #и another_method будут закрытыми
  private

  def my_method
# ...
  end

  def another_method
# ...
  end
end

class MyClass2 < MyClass1
  # Переопределение метода
  def method_2(a)
    puts "Метод из класса 2. А: #{a}"
  end
  # доступ к переменной из родительского класса
  def sss
    puts $n
  end
end

a = MyClass2.new
a.method_2("Фраза")
a.sss
